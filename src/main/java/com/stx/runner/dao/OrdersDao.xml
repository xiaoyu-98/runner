<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.stx.runner.dao.OrdersDao">

    <resultMap type="com.stx.runner.entity.Orders" id="OrdersMap">
        <id property="id" column="id" jdbcType="INTEGER"/>
        <result property="buyerName" column="buyer_name" jdbcType="VARCHAR"/>
        <result property="buyerPhone" column="buyer_phone" jdbcType="VARCHAR"/>
        <result property="buyerAddress" column="buyer_address" jdbcType="VARCHAR"/>
        <result property="orderAmount" column="order_amount" jdbcType="NUMERIC"/>
        <result property="orderStatus" column="order_status" jdbcType="BOOLEAN"/>
        <result property="createTime" column="createTime" jdbcType="TIMESTAMP"/>
        <result property="sellerName" column="seller_name" jdbcType="VARCHAR"/>
        <result property="sellerPhone" column="seller_phone" jdbcType="VARCHAR"/>
    </resultMap>

    <resultMap id="ordersWithuserAndShop" type="com.stx.runner.entity.Orders" extends="OrdersMap">
        <association property="users" javaType="com.stx.runner.entity.User">
            <id property="id" column="uid" jdbcType="INTEGER"/>
            <result property="username" column="username" jdbcType="VARCHAR"/>
            <result property="password" column="password" jdbcType="VARCHAR"/>
            <result property="phone" column="phone1" jdbcType="VARCHAR"/>
            <result property="sex" column="sex" jdbcType="VARCHAR"/>
            <result property="email" column="email" jdbcType="VARCHAR"/>
            <result property="address" column="address" jdbcType="VARCHAR"/>
            <result property="createTime" column="createTime1" jdbcType="TIMESTAMP"/>
            <result property="enabled" column="enabled" jdbcType="BOOLEAN"/>
            <result property="image1" column="image" jdbcType="VARCHAR"/>
            <result property="nameZh" column="nameZh" jdbcType="VARCHAR"/>
        </association>
        <association property="shops" javaType="com.stx.runner.entity.Shop">
            <id property="id" column="sid" jdbcType="INTEGER"/>
            <result property="name" column="name" jdbcType="VARCHAR"/>
            <result property="createTime" column="createTime2" jdbcType="TIMESTAMP"/>
            <result property="score" column="score" jdbcType="INTEGER"/>
            <result property="type" column="type" jdbcType="INTEGER"/>
            <result property="isApprove" column="isApprove" jdbcType="BOOLEAN"/>
            <result property="phone" column="phone2" jdbcType="VARCHAR"/>
            <result property="sellNum" column="sellNum" jdbcType="INTEGER"/>
            <result property="info" column="info" jdbcType="VARCHAR"/>
            <result property="open" column="open" jdbcType="BOOLEAN"/>
            <result property="image" column="image2" jdbcType="VARCHAR"/>
        </association>
    </resultMap>

    <resultMap id="OrdersWithProducts" type="com.stx.runner.entity.Orders" extends="OrdersMap">
        <collection property="orderProducts" ofType="com.stx.runner.entity.OrderProduct">
            <id property="id" column="opid"/>
            <result property="pnum" column="pnum"/>
            <result property="oid" column="oid"/>
            <association property="product" javaType="com.stx.runner.entity.Product">
                <id property="id" column="pid2"/>
                <result property="name" column="name"/>
            </association>
        </collection>
    </resultMap>

    <!--根据订单状态查询所有订单-->
    <select id="findOrdersByStatus" resultMap="OrdersWithProducts">

          select o.*,op.id as opid,op.pnum as pnum,op.oid as oid ,p.id as pid2,p.name as `name`
        from orders o,order_product op ,product p
        where o.id  = op.oid and op.pid = p.id and o.order_status = #{status}
    </select>


    <select id="getOrdersByUserAndShop" resultMap="ordersWithuserAndShop">
        select o.*,s.id as sid,s.name as name ,s.createTime as createTime2,s.score as score,s.type as type,
        s.isApprove as isApprove,s.phone as phone2,s.sellNum as sellNum,s.info as info,s.open as open, s.image as
        image2,
        u.id as uid,u.username as username,u.phone as phone1,u.sex as sex,u.email as email,u.address as address,
        u.createTime as createTime1,u.enabled as enabled,u.image as image1,u.nameZh as nameZh
        from orders o, shop s,user u
        where o.sid = s.id and o.uid = u.id
        <if test="sid !=null and sid !=''">
            and sid = #{sid}
        </if>
        <if test="uid !=null and uid !=''">
            and uid = #{uid}
        </if>
    </select>
    <!--根据商家更新订单信息-->
    <update id="updateByShop">
        update orders
        set seller_name = #{name},seller_phone = #{phone}
        where sid = #{id}
    </update>

    <!--根据用户更新订单信息-->
    <update id="updateByUser">
        update orders
        set buyer_name = #{username} , buyer_address=#{address},buyer_phone =#{phone}
        where uid = #{id}
    </update>


    <select id="findAllOrdersByPage" resultMap="ordersWithuserAndShop">
        select o.*,s.id as sid,s.name as name ,s.createTime as createTime2,s.score as score,s.type as type,
        s.isApprove as isApprove,s.phone as phone2,s.sellNum as sellNum,s.info as info,s.open as open, s.image as image2,
        u.id as uid,u.username as username,u.phone as phone1,u.sex as sex,u.email as email,u.address as address,
        u.createTime as createTime1,u.enabled as enabled,u.image as image1,u.nameZh as nameZh
        from orders o left join shop s
        on o.sid = s.id left join user u
        on o.uid = u.id
    </select>

    <!--查询当前用户的订单-->
    <!--    <select id="findAllByUid" resultMap="OrdersMap">
            select * from orders where uid = #{id} order by id desc
        </select>-->
    <select id="findAllByUid" resultMap="OrdersWithProducts">
        select o.*,op.id as opid,op.pnum as pnum,op.oid as oid ,p.id as pid2,p.name as `name`
        from orders o,order_product op ,product p
        where o.id  = op.oid and op.pid = p.id and o.uid = #{id}
    </select>

    <!--查询单个-->
    <select id="queryById" resultMap="OrdersMap">
        select
          id, buyer_name, buyer_phone, buyer_address, order_amount, order_status, createTime, seller_name, seller_phone, uid, sid
        from school_shopping.orders
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="OrdersMap">
        select
          id, buyer_name, buyer_phone, buyer_address, order_amount, order_status, createTime, seller_name, seller_phone, uid, sid
        from school_shopping.orders
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="OrdersMap">
        select
        id, buyer_name, buyer_phone, buyer_address, order_amount, order_status, createTime, seller_name, seller_phone,
        uid, sid
        from school_shopping.orders
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="buyerName != null and buyerName != ''">
                and buyer_name = #{buyerName}
            </if>
            <if test="buyerPhone != null and buyerPhone != ''">
                and buyer_phone = #{buyerPhone}
            </if>
            <if test="buyerAddress != null and buyerAddress != ''">
                and buyer_address = #{buyerAddress}
            </if>
            <if test="orderAmount != null">
                and order_amount = #{orderAmount}
            </if>
            <if test="orderStatus != null">
                and order_status = #{orderStatus}
            </if>
            <if test="createTime != null">
                and createTime = #{createTime}
            </if>
            <if test="sellerName != null and sellerName != ''">
                and seller_name = #{sellerName}
            </if>
            <if test="sellerPhone != null and sellerPhone != ''">
                and seller_phone = #{sellerPhone}
            </if>
            <if test="uid != null">
                and uid = #{uid}
            </if>
            <if test="sid != null">
                and sid = #{sid}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert">
        insert into school_shopping.orders(buyer_name, buyer_phone, buyer_address, order_amount, order_status, createTime, seller_name, seller_phone, uid, sid)
        values (#{buyerName}, #{buyerPhone}, #{buyerAddress}, #{orderAmount}, #{orderStatus}, #{createTime}, #{sellerName}, #{sellerPhone}, #{uid}, #{sid})
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update school_shopping.orders
        <set>
            <if test="buyerName != null and buyerName != ''">
                buyer_name = #{buyerName},
            </if>
            <if test="buyerPhone != null and buyerPhone != ''">
                buyer_phone = #{buyerPhone},
            </if>
            <if test="buyerAddress != null and buyerAddress != ''">
                buyer_address = #{buyerAddress},
            </if>
            <if test="orderAmount != null">
                order_amount = #{orderAmount},
            </if>
            <if test="orderStatus != null">
                order_status = #{orderStatus},
            </if>
            <if test="createTime != null">
                createTime = #{createTime},
            </if>
            <if test="sellerName != null and sellerName != ''">
                seller_name = #{sellerName},
            </if>
            <if test="sellerPhone != null and sellerPhone != ''">
                seller_phone = #{sellerPhone},
            </if>
            <if test="uid != null">
                uid = #{uid},
            </if>
            <if test="sid != null">
                sid = #{sid},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from school_shopping.orders where id = #{id}
    </delete>

</mapper>